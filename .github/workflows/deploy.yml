name: 🚀 Deploy to Ubuntu Server

on:
  push:
    branches:
      - master  # Runs on every push to the master branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: 📦 Install Dependencies
        run: npm install

      - name: 🔨 Build Frontend
        run: npm run build

      - name: 🔍 Verify Build Output
        run: ls -la dist/

      - name: 📄 Create Service Account Key File
        env:
          SERVICE_ACCOUNT_KEY: ${{ secrets.SERVICE_ACCOUNT_KEY }}
        run: echo "$SERVICE_ACCOUNT_KEY" > service-account-key.json

      - name: 📄 Create Watchdog Script
        run: |
          cat > watchdog.js << 'EOL'
          const axios = require('axios');
          const { exec } = require('child_process');
          const fs = require('fs');

          const API_URL = 'http://localhost:3014';

          async function checkHealth() {
            try {
              console.log('🔍 Running health check...');
              const response = await axios.get(`${API_URL}/auth-health`);
              
              if (response.data.status === 'ok') {
                console.log('✅ Health check passed');
                console.log(`🔹 Auth type: ${response.data.authType}`);
                if (response.data.expiresIn !== 'n/a') {
                  console.log(`🔹 Token expires in: ${response.data.expiresIn} seconds`);
                }
              } else {
                throw new Error('Health check returned unexpected response');
              }
            } catch (error) {
              console.error('❌ Health check failed:', error.message);
              console.log('🔄 Restarting server...');
              
              exec('pm2 restart game-backend', (error) => {
                if (error) {
                  console.error('Failed to restart server:', error);
                } else {
                  console.log('✅ Server restart initiated');
                }
              });
            }
          }

          setInterval(checkHealth, 60 * 60 * 1000);
          console.log('🚀 Watchdog started - will check health every hour');
          checkHealth();
          EOL

      - name: 🚚 Deploy Files to Server
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}
        run: |
          echo "${SERVER_SSH_KEY}" > key.pem
          chmod 600 key.pem
          scp -o StrictHostKeyChecking=no -i key.pem -r dist src server.ts package.json package-lock.json service-account-key.json watchdog.js ${SERVER_USER}@${SERVER_IP}:/var/www/game-ratings.sapphirix.ch/game-ranking

      - name: 🔄 Restart Backend on Server
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}
        run: |
          echo "${SERVER_SSH_KEY}" > key.pem
          chmod 600 key.pem
          ssh -o StrictHostKeyChecking=no -i key.pem ${SERVER_USER}@${SERVER_IP} "cd /var/www/game-ratings.sapphirix.ch/game-ranking && npm install && pm2 delete game-backend || true && pm2 start --name game-backend 'npx tsx server.ts' && pm2 delete game-watchdog || true && pm2 start --name game-watchdog 'node watchdog.js' && pm2 save"
